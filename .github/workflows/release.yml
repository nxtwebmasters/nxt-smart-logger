name: Release

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "README.md"
      - "rollup.config.js"
      - "CHANGELOG.md"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Install standard-version
        run: npm install -g standard-version

      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build package
        run: npm run build

      - name: Version and Publish
        id: publish
        run: |
          # Check if there are changes that warrant a release
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected. Skipping release."
            exit 0
          fi

          # Run standard-version to bump version and generate changelog
          standard-version --release-as patch --skip.tag --skip.commit

          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

          # Commit changes (CHANGELOG.md and package.json)
          git add CHANGELOG.md package.json
          git commit -m "chore(release): v${NEW_VERSION} [skip ci]"

          # Create tag
          git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}"

          # Publish to NPM
          npm publish --access public

          # Push commit and tag
          git push --follow-tags
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: success() && env.new_version != ''
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.new_version }}
          tag_name: v${{ env.new_version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}