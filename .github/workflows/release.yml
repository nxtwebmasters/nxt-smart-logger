name: Release

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "README.md"
      - "rollup.config.js"
      - "CHANGELOG.md"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}

      - name: Build package
        run: npm run build

      - name: Bump version and create changelog
        id: bump-version
        run: |
          npx standard-version --release-as patch --skip.tag --skip.commit
          echo "NEW_VERSION=$(node -p 'require(\"./package.json\").version')" >> $GITHUB_ENV

      - name: Commit version bump
        if: env.NEW_VERSION != ''
        run: |
          git add CHANGELOG.md package.json
          git commit -m "chore(release): v${{ env.NEW_VERSION }} [skip ci]"
          git push

      - name: Publish to npm
        if: env.NEW_VERSION != ''
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        if: env.NEW_VERSION != ''
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.NEW_VERSION }}
          tag_name: v${{ env.NEW_VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}